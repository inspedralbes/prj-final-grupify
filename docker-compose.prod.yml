services:
  traefik:
    image: traefik:v3
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=a23adrestmar@inspedralbes.cat"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.websecure.http.middlewares=crowdsec@file"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    restart: always
    networks:
      - app-network

  nuxt-app:
    image: ghcr.io/adriapedralbes/frontend:v2.5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nuxt-app.rule=Host(`grupify.cat`) || Host(`www.grupify.cat`)"
      - "traefik.http.routers.nuxt-app.entrypoints=websecure"
      - "traefik.http.routers.nuxt-app.tls.certresolver=myresolver"
      - "traefik.http.services.nuxt-app.loadbalancer.server.port=3000"
      - "traefik.http.routers.nuxt-app.middlewares=crowdsec@file"
    environment:
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      API_BASE_URL: ${API_BASE_URL}
      NODE_ENV: production
    restart: always
    networks:
      - app-network

  laravel-app:
    image: ghcr.io/adriapedralbes/backend:v2.5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laravel-app.rule=Host(`api.grupify.cat`)"
      - "traefik.http.routers.laravel-app.entrypoints=websecure"
      - "traefik.http.routers.laravel-app.tls.certresolver=myresolver"
      - "traefik.http.services.laravel-app.loadbalancer.server.port=80"
      - "traefik.http.routers.laravel-app.middlewares=crowdsec@file"
    environment:
      DB_CONNECTION: mysql
      DB_HOST: ${DB_HOST}
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: null
      REDIS_PORT: ${REDIS_PORT}
    restart: always
    networks:
      - app-network

  queue-worker:
    image: ghcr.io/adriapedralbes/backend:v2.5
    command: "php artisan queue:work redis --tries=3 --timeout=90"
    restart: always
    networks:
      - app-network

  node-app:
    image: ghcr.io/adriapedralbes/nodejs:v2.5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-app.rule=Host(`node.grupify.cat`)"
      - "traefik.http.routers.node-app.entrypoints=websecure"
      - "traefik.http.routers.node-app.tls.certresolver=myresolver"
      - "traefik.http.services.node-app.loadbalancer.server.port=5000"
      - "traefik.http.routers.node-app.middlewares=crowdsec@file"
    environment:
      NODE_ENV: production
    restart: always
    networks:
      - app-network

  adminer:
    image: adminer:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`adminer.grupify.cat`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls.certresolver=myresolver"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    restart: always
    networks:
      - app-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    networks:
      - app-network

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - app-network

  crowdsec:
    image: crowdsecurity/crowdsec:latest
    volumes:
      - crowdsec-config:/etc/crowdsec
      - /var/log:/var/log:ro
    environment:
      - COLLECTIONS=traefik
    networks:
      - app-network
    restart: always

  traefik-bouncer:
    image: fbonalair/traefik-crowdsec-bouncer:latest
    environment:
      - CROWDSEC_BOUNCER_API_KEY=mysecureapikey
      - CROWDSEC_AGENT_HOST=http://crowdsec:8080
    networks:
      - app-network
    restart: always


volumes:
  db_data:
  redis_data:
  letsencrypt:
  crowdsec-config:

networks:
  app-network:
    driver: bridge