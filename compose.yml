services:
  reverse-proxy:
    image: traefik:v2.10
    container_name: traefik
    command:
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=talkcompiler@gmail.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always

  db:
    image: mysql:8.2.0
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: gestioeduca
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - backend
    deploy:
      labels:
        - traefik.enable=false

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      APP_ENV: production
      APP_KEY: ${APP_KEY}
      DB_HOST: db
      DB_DATABASE: gestioeduca
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - backend
      - traefik
    depends_on:
      - db
    labels:
      - traefik.http.routers.backend.rule=Host(`api.basebrutt.com`)
      - traefik.http.routers.backend.entrypoints=websecure
      - traefik.http.routers.backend.tls.certresolver=myresolver
      - traefik.port=9000
      - traefik.docker.network=traefik

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    networks:
      - traefik
    labels:
      - traefik.http.routers.frontend.rule=Host(`basebrutt.com`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls.certresolver=myresolver
      - traefik.port=3000
      - traefik.docker.network=traefik

  nodejs:
    build:
      context: ./backend/node-app
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      DB_HOST: db
    networks:
      - backend
      - traefik
    labels:
      - traefik.http.routers.nodejs.rule=Host(`node.basebrutt.com`)
      - traefik.http.routers.nodejs.entrypoints=websecure
      - traefik.http.routers.nodejs.tls.certresolver=myresolver
      - traefik.port=5000
      - traefik.docker.network=traefik

networks:
  traefik:
    external: true
  backend:
    driver: bridge

volumes:
  mysql_data:
