services:
  nuxt-app:
    image: ghcr.io/adriapedralbes/frontend:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nuxt-app.rule=Host(`grupify.cat`, `www.grupify.cat`)"
      - "traefik.http.services.nuxt-app.loadbalancer.server.port=3000"
    environment:
      NODE_ENV: production
    networks:
      - app-network

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    deploy:
      mode: global
      restart_policy:
        condition: any
    networks:
      - app-network

  laravel-app:
    image: ghcr.io/adriapedralbes/backend:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laravel-app.rule=Host(`api.grupify.cat`)"
      - "traefik.http.services.laravel-app.loadbalancer.server.port=80"
    env_file:
      - ./backend/.env
    #volumes:
    #  - ./backend:/var/www/html
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - app-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: gestioeduca
      MYSQL_USER_FILE: /run/secrets/mysql_user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
    secrets:
      - mysql_user
      - mysql_password
      - mysql_root_password
    volumes:
      - db_data:/var/lib/mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - app-network

  node-app:
    image: ghcr.io/adriapedralbes/nodejs:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-app.rule=Host(`node.grupify.cat`)"
      - "traefik.http.services.node-app.loadbalancer.server.port=5000"
    environment:
      NODE_ENV: production
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - app-network

  adminer:
    image: adminer:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`adminer.grupify.cat`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: overlay

secrets:
  mysql_user:
    file: ./docker-secrets/mysql_user.txt
  mysql_password:
    file: ./docker-secrets/mysql_password.txt
  mysql_root_password:
    file: ./docker-secrets/mysql_root_password.txt

