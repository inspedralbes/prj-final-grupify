services:
  traefik:
    image: traefik:v3.3
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=a23adrestmar@inspedralbes.cat"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    deploy:
      mode: global
      restart_policy:
        condition: any
    networks:
      - app-network

  nuxt-app:
    image: ghcr.io/adriapedralbes/frontend:v1.0
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nuxt-app.rule=Host(`grupify.cat`) || Host(`www.grupify.cat`)"
      - "traefik.http.routers.nuxt-app.entrypoints=websecure"
      - "traefik.http.routers.nuxt-app.tls.certresolver=myresolver"
      - "traefik.http.services.nuxt-app.loadbalancer.server.port=3000"
    environment:
      NODE_ENV: production
    networks:
      - app-network

  laravel-app:
    image: ghcr.io/adriapedralbes/backend:v1.0
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laravel-app.rule=Host(`api.grupify.cat`)"
      - "traefik.http.routers.laravel-app.entrypoints=websecure"
      - "traefik.http.routers.laravel-app.tls.certresolver=myresolver"
      - "traefik.http.services.laravel-app.loadbalancer.server.port=80"
    # Puedes incluir variables de entorno adicionales o leer un archivo env si lo requieres
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: gestioeduca
      DB_USERNAME: user
      DB_PASSWORD: user
      REDIS_HOST: redis
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
    networks:
      - app-network

  queue-worker:
    image: ghcr.io/adriapedralbes/backend:v1.0
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    command: >
      sh -c "chmod +x ./wait-for-mysql.sh && ./wait-for-mysql.sh db:3306 -- php artisan queue:work redis --tries=3 --timeout=90"
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: gestioeduca
      DB_USERNAME: user
      DB_PASSWORD: user
      REDIS_HOST: redis
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
    networks:
      - app-network


  node-app:
    image: ghcr.io/adriapedralbes/nodejs:v1.0
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-app.rule=Host(`node.grupify.cat`)"
      - "traefik.http.routers.node-app.entrypoints=websecure"
      - "traefik.http.routers.node-app.tls.certresolver=myresolver"
      - "traefik.http.services.node-app.loadbalancer.server.port=5000"
    environment:
      NODE_ENV: production
    networks:
      - app-network

  adminer:
    image: adminer:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`adminer.grupify.cat`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls.certresolver=myresolver"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    networks:
      - app-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: gestioeduca
      MYSQL_USER_FILE: /run/secrets/mysql_user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
    secrets:
      - mysql_user
      - mysql_password
      - mysql_root_password
    volumes:
      - db_data:/var/lib/mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      app-network:
        aliases:
          - db

  redis:
    image: redis:alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    volumes:
      - redis_data:/data
    networks:
      - app-network

volumes:
  db_data:
  redis_data:
  letsencrypt:

networks:
  app-network:
    driver: overlay

secrets:
  mysql_user:
    file: ./docker-secrets/mysql_user.txt
  mysql_password:
    file: ./docker-secrets/mysql_password.txt
  mysql_root_password:
    file: ./docker-secrets/mysql_root_password.txt