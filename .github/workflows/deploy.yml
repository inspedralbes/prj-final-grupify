name: Despliegue a Producción

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Construir y Publicar Imágenes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Build de la imagen del frontend
        run: |
          docker build -t ghcr.io/adriapedralbes/frontend:${{ github.sha }} -f ./frontend/Dockerfile.prod ./frontend

      - name: Build de la imagen del backend
        run: |
          docker build -t ghcr.io/adriapedralbes/backend:${{ github.sha }} -f ./backend/Dockerfile.prod ./backend

      - name: Build de la imagen de NodeJS
        run: |
          docker build -t ghcr.io/adriapedralbes/nodejs:${{ github.sha }} -f ./backend/node-app/Dockerfile.prod ./backend/node-app

      - name: Iniciar sesión en GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Push imagen del frontend
        run: docker push ghcr.io/adriapedralbes/frontend:${{ github.sha }}

      - name: Push imagen del backend
        run: docker push ghcr.io/adriapedralbes/backend:${{ github.sha }}

      - name: Push imagen de NodeJS
        run: docker push ghcr.io/adriapedralbes/nodejs:${{ github.sha }}

      - name: Tag y Push "latest" para frontend
        run: |
          docker tag ghcr.io/adriapedralbes/frontend:${{ github.sha }} ghcr.io/adriapedralbes/frontend:latest
          docker push ghcr.io/adriapedralbes/frontend:latest

      - name: Tag y Push "latest" para backend
        run: |
          docker tag ghcr.io/adriapedralbes/backend:${{ github.sha }} ghcr.io/adriapedralbes/backend:latest
          docker push ghcr.io/adriapedralbes/backend:latest

      - name: Tag y Push "latest" para nodejs
        run: |
          docker tag ghcr.io/adriapedralbes/nodejs:${{ github.sha }} ghcr.io/adriapedralbes/nodejs:latest
          docker push ghcr.io/adriapedralbes/nodejs:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Iniciar SSH Agent y añadir clave privada
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.PRODUCTION_KEY }}

      - name: Obtener Host Key del servidor de producción
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.PRODUCTION_HOST }} >> ~/.ssh/known_hosts

      - name: Configurar Docker Context para servidor remoto
        run: |
          docker context create production \
            --docker "host=ssh://${{ secrets.PRODUCTION_USER }}@${{ secrets.PRODUCTION_HOST }}" \
            --description "Contexto remoto para producción"
          docker context use production

      - name: Desplegar el stack usando Docker Context
        env:
          DOCKER_CONTEXT: production
        run: |
          docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" -p "${{ secrets.GHCR_TOKEN }}"

          # Actualizar imágenes
          docker pull ghcr.io/adriapedralbes/frontend:latest
          docker pull ghcr.io/adriapedralbes/backend:latest
          docker pull ghcr.io/adriapedralbes/nodejs:latest

          # Desplegar el stack
          docker stack deploy -c compose.yml grupify-ghactions --with-registry-auth